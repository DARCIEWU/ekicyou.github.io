<?php
/* ----------------------------------------------------------------------------
 * $Id: basetag.plu,v 1.1 2004/08/13 00:52:52 cvs Exp $
 *   SSSL基本タグオブジェクト
 * ----------------------------------------------------------------------------
 * Mastering programed by Dot-Station Mastor
 *
 * Copyright 2004 Dot-Station.
 * ----------------------------------------------------------------------------
 */

/**
 * SSSL基本タグオブジェクト
 *
 * @package  dot_sssl_baseTag
 * @since    PHP 5.0.0rc1
 * @author   Dot-Station Mastor
 * @version  $Revision: 1.1 $
 */
abstract class dot_sssl_baseTag implements dot_SSSL{
  // {{{ properties
  /**
   * タグ名称
   * @var string
   */
  protected $tagName;


  /**
   * プロパティリスト
   * @var array
   */
  protected $attributes;


  /**
   * タグリスト
   * @var array
   */
  protected $items;


  /**
   * 子タグリスト
   * @var array
   */
  protected $childs;


  /**
   * タグ名称
   * @var string
   */
  protected $isAddCDATA =FALSE;



  // }}}
  // {{{ __construct
  /**
   * コンストラクタ。
   *
   * @param void
   */
  protected function __construct($tagName,$attributes){
    $this->tagName    =$tagName;
    $this->attributes =$attributes;
    $this->items      =array();
    $this->childs     =array();
  }



  // }}}
  // {{{ __destruct
  /**
   * デストラクタ。
   */
  function __destruct(){
  }



  // }}}
  // {{{ add_sssl
  /**
   * dot_SSSL オブジェクトを追加する。
   *
   * @param class dot_SSSL $sssl dot_SSSLオブジェクト
   */
  public function add_sssl(dot_SSSL $sssl){
    $this->items[] =$sssl;
  }


  // }}}
  // {{{ add_cdata
  /**
   * キャラクターデータを追加する。
   *
   * @param string $cdata キャラクターデータ
   */
  public function add_cdata($cdata){
    if(! $this->isAddCDATA) return;
    $this->items[] =$cdata;
  }


  // }}}
  // {{{ toXML
  /**
   * XMLデータを出力する。
   *
   * @param void
   * @return string $xml XMLデータ(UTF-8フォーマット)
   */
  public function toXML(){
    return $this->_toXML_this($this->_toXML_child());
  }


  // }}}
  // {{{ _toXML_this
  /**
   * 自分自身のXMLデータを出力する。
   *
   * @param string $child 子の要素
   * @return string $xml XMLデータ(UTF-8フォーマット)
   */
  public function _toXML_this($child){
    // タグ開始
    $rc ="<{$this->tagName}";

    // プロパティ展開
    /** @todo $attributesがどんな形で来るのか？ */
    foreach($this->attributes as $k=>$v){
      $v =htmlspecialchars($v);
      $rc .=" $k=\"$v\"";
    }

    // タグを閉じる
    if($child!="")  $rc .=">$child</{$this->tagName}>";
    else            $rc .=" />";
    return $rc;
  }



  // }}}
  // {{{ _toXML_child
  /**
   * 子のXMLデータを出力する。
   *
   * @param void
   * @return string $xml XMLデータ(UTF-8フォーマット)
   */
  public function _toXML_child(){
    $rc ="";
    foreach($this->items as $v){
      if($v instanceOf dot_SSSL)  $rc .=$v->toXML();
      else                        $rc .=$v;
    }
    return $rc;
  }


  // }}}
  // {{{ getTagName
  /**
   * XMLタグ名称を取得
   *
   * @param void
   * @return string $tag タグ名称
   */
  public function getTagName(){
    return $this->tagName;
  }


  // }}}
  // {{{ getAttribute
  /**
   * XML属性を取得
   *
   * @param string $name 属性名
   * @return string $att 属性
   */
  public function getAttribute($name){
    return $this->attributes[$name];
  }


  // }}}
  // {{{ getAttributes
  /**
   * XML属性一覧を取得
   *
   * @param void
   * @return string[] $att_list 属性一覧
   */
  public function getAttributes(){
    return $this->attributes;
  }



  // }}}
  // {{{ add_child
  /**
   * dot_SSSL 子タグに相当するオブジェクトを追加する
   *
   * @param class dot_SSSL $sssl dot_SSSLオブジェクト
   */
  protected function add_child(dot_SSSL $sssl){
    $this->childs[] =$sssl;
  }


  // }}}
  // {{{ get_contents
  /**
   * 情報を取得する
   *
   * @param dot_sssl_request  $req SSSLリクエスト情報
   * @return void
   */
  public function get_contents($req){
    // リクエストに一致するキャッシュレスポンスがあればそれを返す
    if($req->getCache($req))  return TRUE;

    // 子タグのレスポンスを設定する
    $this->responseChild($req ,$res);

    // 自分の属性、合成処理
    $this->responseThis($req ,$res,$childres);

    // 終了
    return TRUE;
  }



  // }}}
  // {{{ get_contents_child
  /**
   * 子タグの情報を取得する
   *
   * @param dot_sssl_request  $req SSSLリクエスト情報
   * @param dot_sssl_response $res SSSLレスポンス情報
   * @return void
   */
  protected function get_contents_child($req ,$res){
    foreach($this->childs as $child){
      $child->get_contents($req, $res);
    }
    // 終了
    return TRUE;
  }



  // }}}
}
?>