<?php
/* ----------------------------------------------------------------------------
 * $Id: errorhandler.plu,v 1.4 2004/04/26 01:53:32 cvs Exp $
 *   独自エラーハンドラ
 * ----------------------------------------------------------------------------
 * Mastering programed by Dot-Station Mastor
 *
 * Copyright 2004 Dot-Station.
 * ----------------------------------------------------------------------------
 */

function myErrorHandler($errno, $errstr, $errfile, $errline){
  $dt = date("Y-m-d H:i:s (T)");
  $errortype = array (
                  1 =>  "Error",
                  2 =>  "Warning",
                  4 =>  "Parsing Error",
#                 8 =>  "Notice",
                 16 =>  "Core Error",
                 32 =>  "Core Warning",
                 64 =>  "Compile Error",
                128 =>  "Compile Warning",
                256 =>  "User Error",
                512 =>  "User Warning",
#              1024 =>  "User Notice"
                );

  $user_errors = array(E_USER_ERROR, E_USER_WARNING, E_USER_NOTICE);

  if(! $errStr =$errortype[$errno]) return;

  $m[] ="PHP $errStr [$errno] $errstr";
  $m[] ="in $errfile on line $errline";

  // traceLog
  $debug =debug_backtrace();
  foreach($debug as $v){
    $m[] =" ...trace in {$v[file]} on line {$v[line]}";
  }

  $mes =implode("\n" ,$m) ."\n\n";
  $mes =str_replace(GHOST_DIR  ."\\" ,"" ,$mes);
  $mes =str_replace(GHOST_DIR0 ."\\" ,"" ,$mes);
  dot_Util::echoErr($mes);

  switch($errno){
    case E_ERROR:
      exit -1;
  }
}
  set_error_handler("myErrorHandler");





?>