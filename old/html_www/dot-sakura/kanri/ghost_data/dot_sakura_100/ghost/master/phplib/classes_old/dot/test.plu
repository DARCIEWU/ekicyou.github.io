<?php
/* ----------------------------------------------------------------------------
 * $Id: test.plu,v 1.1 2004/08/10 10:08:24 cvs Exp $
 *   TESTUNIT
 * ----------------------------------------------------------------------------
 * Mastering programed by Dot-Station Mastor
 *
 * Copyright 2004 Dot-Station.
 * ----------------------------------------------------------------------------
 */

class dot_Test extends PHPUnit_TestCase {

  public $ai;

  function __construct($name) {
    parent::__construct($name);
  }

  function setUp() {
    $className =AI_ENGINE;
    $this->ai =new $className();
  }


  function testDotException() {
    try{
      throw new dot_Exception("TEST Exception");
    }
    catch(dot_Exception $ex){
      $this->assertSame($ex->getMessage(),'TEST Exception'  ,"TEST_MessageCheck");
    }
  }


  function testParseSHIORI() {
    $lines[] ='GET Version SHIORI/2.0';
    $lines[] ='Sender: Nobody';
    $lines[] ='Charset: UTF-8';
    $rc =dot_Request::parseSHIORI($lines);
    $this->assertTrue(is_array($rc));
    $this->assertSame($rc['eventName']            ,'GET_Version'  ,"TEST1_1");
    $this->assertSame($rc['version']              ,'SHIORI_2_0'   ,"TEST1_2");
    $this->assertSame($rc['params']['Sender'][0]  ,'Nobody'       ,"TEST1_2");
    $this->assertSame($rc['params']['Charset'][0] ,'UTF-8'        ,"TEST1_2");
  }


  function testSHIORI_Event() {
    //-----------------------------------------------------------------
    // ■ コマンド＆応答
    //-----------------------------------------------------------------

    //-----------------------------------------------------------------
    // SHIORI/2.x 系
    //-----------------------------------------------------------------
    $lines =array(
              'GET Version SHIORI/2.0',
              'Sender: Nobody',
              'Charset: UTF-8',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------
    $lines =array(
              'GET Word SHIORI/2.0',
              'Sender: materia',
              'Type: \ms',
              'Charset: UTF-8',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------
    $lines =array(
              'GET Status SHIORI/2.0',
              'Sender: Nobody',
              'Charset: UTF-8',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------
    $lines =array(
              'GET String SHIORI/2.5',
              'ID: homeurl',
              'Charset: UTF-8',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------
    $lines =array(
              'GET Sentence SHIORI/2.0',
              'Sender: User',
              'Charset: UTF-8',
              'Sentence: おはよー。',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------
    $lines =array(
              'NOTIFY OwnerGhostName SHIORI/2.0',
              'Sender: Nobody',
              'Ghost: さくら',
              'Charset: UTF-8',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------
    $lines =array(
              'NOTIFY OtherGhostName SHIORI/2.3',
              'Sender: materia',
              'GhostEx: なる[1]0[1]1',
              'GhostEx: まゆら[1]0[1]1',
              'Charset: UTF-8',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------
    $lines =array(
              'TEACH SHIORI/2.4',
              'Word: ガッツ石松',
              'Reference0: 人名',
              'Reference1: 危険',
              'Charset: UTF-8',
            );
    $check =implode("\r\n", array(
                              'SHIORI/3.0 400 Bad Request',
                              'Charset: UTF-8',
                            )) ."\r\n\r\n";
    $cmd[] =array('LINES'=>$lines ,'CHECK'=>$check);

    //-----------------------------------------------------------------


    //-----------------------------------------------------------------
    // コマンドをまとめて実行
    //-----------------------------------------------------------------
    foreach($cmd as $k=>$v){
      $mes ="TEST2_{$k}_";
      $lines =$v['LINES'];
      $check =$v['CHECK'];
      $event =dot_ExecEvent::createFromSHIORI($this->ai ,$lines);
      $res =$event->exec();
      ob_start();
      $res->output();
      $text =ob_get_contents();
      ob_end_clean();
      $mes ="\n----------------------------\n{$mes}1\nCHECK:\n$check\nRES:\n$text";
      $this->assertSame($check ,$text ,$mes);
    }

  }
}


?>